server {
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;
    server_name elistory.ru; # Your server name

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/elistory.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/elistory.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Serve static files
    root /var/www/dist;
    index index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # pass PHP scripts to FastCGI server
    location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    }

    client_max_body_size 200M;
    add_header 'Access-Control-Allow-Origin' 'https://elistory.ru' always;

    # Reverse proxy for backend
    location /api/ { # Assuming your backend API is at /api/, adjust if different
        proxy_pass http://localhost:3000; # Proxy pass to your local backend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    # Reverse proxy for backend strapi
    location /strapi/ {
        rewrite ^/strapi/?(.*)$ /$1 break;
        proxy_pass http://strapi;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;
    }

}

# HTTP server (for redirect to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name i.moymyach.ru;

    if ($host = i.moymyach.ru) {
        return 301 https://$host$request_uri;
    }
    return 404;
}